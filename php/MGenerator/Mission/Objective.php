<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mission_generator.proto

namespace MGenerator\Mission;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>mGenerator.Mission.Objective</code>
 */
class Objective extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string title = 1;</code>
     */
    private $title = '';
    /**
     * Generated from protobuf field <code>string description = 2;</code>
     */
    private $description = '';
    /**
     * Generated from protobuf field <code>string rules_text = 3;</code>
     */
    private $rules_text = '';
    /**
     * Generated from protobuf field <code>bool primary = 4;</code>
     */
    private $primary = false;
    /**
     * Generated from protobuf field <code>repeated .mGenerator.Point objective_points = 5;</code>
     */
    private $objective_points;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $title
     *     @type string $description
     *     @type string $rules_text
     *     @type bool $primary
     *     @type \MGenerator\Point[]|\Google\Protobuf\Internal\RepeatedField $objective_points
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\MissionGenerator::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string title = 1;</code>
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Generated from protobuf field <code>string title = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTitle($var)
    {
        GPBUtil::checkString($var, True);
        $this->title = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string description = 2;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Generated from protobuf field <code>string description = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string rules_text = 3;</code>
     * @return string
     */
    public function getRulesText()
    {
        return $this->rules_text;
    }

    /**
     * Generated from protobuf field <code>string rules_text = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRulesText($var)
    {
        GPBUtil::checkString($var, True);
        $this->rules_text = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool primary = 4;</code>
     * @return bool
     */
    public function getPrimary()
    {
        return $this->primary;
    }

    /**
     * Generated from protobuf field <code>bool primary = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setPrimary($var)
    {
        GPBUtil::checkBool($var);
        $this->primary = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .mGenerator.Point objective_points = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getObjectivePoints()
    {
        return $this->objective_points;
    }

    /**
     * Generated from protobuf field <code>repeated .mGenerator.Point objective_points = 5;</code>
     * @param \MGenerator\Point[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setObjectivePoints($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \MGenerator\Point::class);
        $this->objective_points = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Objective::class, \MGenerator\Mission_Objective::class);

